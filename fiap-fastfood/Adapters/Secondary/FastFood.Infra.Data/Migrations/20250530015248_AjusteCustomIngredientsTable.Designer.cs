// <auto-generated />
using System;
using FastFood.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastFood.Infra.Data.Migrations
{
    [DbContext(typeof(FastFoodDbContext))]
    [Migration("20250530015248_AjusteCustomIngredientsTable")]
    partial class AjusteCustomIngredientsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FastFood.Domain.Entities.CustomerIdentification.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("FastFood.Domain.Entities.DeliveryManagement.Delivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FinalizedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("RetrievedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Deliveries", (string)null);
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.Ingredients.OrderedProductIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("OrderedProductId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderedProductId");

                    b.ToTable("OrderedProductIngredients", (string)null);
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.Ingredients.ProductBaseIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductBaseIngredients", (string)null);
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.OrderedProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Observation")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<Guid?>("OrderId_Dessert")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("OrderId_Drink")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("OrderId_Meal")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("OrderId_SideDish")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId_Dessert");

                    b.HasIndex("OrderId_Drink");

                    b.HasIndex("OrderId_Meal");

                    b.HasIndex("OrderId_SideDish");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderedProducts", (string)null);
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("FastFood.Domain.Entities.PaymentManagement.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExternalTransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("QrCodeUrl")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("FastFood.Domain.Entities.PreparationManagement.Preparation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Preparations", (string)null);
                });

            modelBuilder.Entity("FastFood.Domain.Entities.CustomerIdentification.Customer", b =>
                {
                    b.OwnsOne("FastFood.Domain.Entities.CustomerIdentification.ValueObjects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("varchar(11)")
                                .HasColumnName("Cpf");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("FastFood.Domain.Entities.CustomerIdentification.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Email");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("Cpf");

                    b.Navigation("Email");
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.Ingredients.OrderedProductIngredient", b =>
                {
                    b.HasOne("FastFood.Domain.Entities.OrderManagement.OrderedProduct", null)
                        .WithMany("CustomIngredients")
                        .HasForeignKey("OrderedProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.Ingredients.ProductBaseIngredient", b =>
                {
                    b.HasOne("FastFood.Domain.Entities.OrderManagement.Product", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.OrderedProduct", b =>
                {
                    b.HasOne("FastFood.Domain.Entities.OrderManagement.Order", null)
                        .WithMany("OrderedDessert")
                        .HasForeignKey("OrderId_Dessert");

                    b.HasOne("FastFood.Domain.Entities.OrderManagement.Order", null)
                        .WithMany("OrderedDrink")
                        .HasForeignKey("OrderId_Drink");

                    b.HasOne("FastFood.Domain.Entities.OrderManagement.Order", null)
                        .WithMany("OrderedMealProducts")
                        .HasForeignKey("OrderId_Meal");

                    b.HasOne("FastFood.Domain.Entities.OrderManagement.Order", null)
                        .WithMany("OrderedSideDish")
                        .HasForeignKey("OrderId_SideDish");

                    b.HasOne("FastFood.Domain.Entities.OrderManagement.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.Product", b =>
                {
                    b.OwnsOne("FastFood.Domain.Entities.OrderManagement.ValueObjects.ImageProduct", "Image", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Name")
                                .HasMaxLength(150)
                                .HasColumnType("varchar(150)")
                                .HasColumnName("ImageName");

                            b1.Property<string>("Url")
                                .HasMaxLength(300)
                                .HasColumnType("varchar(300)")
                                .HasColumnName("ImageUrl");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Image");
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.Order", b =>
                {
                    b.Navigation("OrderedDessert");

                    b.Navigation("OrderedDrink");

                    b.Navigation("OrderedMealProducts");

                    b.Navigation("OrderedSideDish");
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.OrderedProduct", b =>
                {
                    b.Navigation("CustomIngredients");
                });

            modelBuilder.Entity("FastFood.Domain.Entities.OrderManagement.Product", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
